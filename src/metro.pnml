/*
 *  Copyright (C) 2012-2014 Jasper Vries
 *  This file is part of Metro Track Set
 *  Modified for termite
 *  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.
 *  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 *  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
*/

spriteset (spriteset_metro_gui_opengfx, "gfx/ogfx_railtypes.png") {
    template_gui(10,760)
}
spriteset (spriteset_metro_gui_ttd, "gfx/ttd_railtypes.png") {
    template_gui_ttd(10,760)
}
switch (FEAT_RAILTYPES, SELF, switch_metro_gui, param_gui) {
    1: spriteset_metro_gui_ttd;
    spriteset_metro_gui_opengfx;
}

spriteset (spriteset_metro_track_overlay_opengfx, "gfx/ogfx_railtypes.png") {
    template_track_overlay(10,20)
}
spriteset (spriteset_metro_track_overlay_ttd, "gfx/ttd_railtypes.png") {
    template_track_overlay(10,20)
}
switch (FEAT_RAILTYPES, SELF, switch_track_overlay_param_gui, param_gui) {
    1                       :spriteset_metro_track_overlay_ttd;
    spriteset_metro_track_overlay_opengfx;
}

spriteset (spriteset_metro_underlay_opengfx, "gfx/ogfx_railtypes.png") {
    template_underlay(10,60)
}
spriteset (spriteset_metro_underlay_ttd, "gfx/ttd_railtypes.png") {
    template_underlay(10,60)
}
switch (FEAT_RAILTYPES, SELF, switch_underlay_param_gui, param_gui) {
    1                       :spriteset_metro_underlay_ttd;
    spriteset_metro_underlay_opengfx;
}

spriteset (spriteset_metro_tunnels_opengfx, "gfx/ogfx_railtypes.png") {
    template_tunnels(330,460)
}
spriteset (spriteset_metro_tunnels_ttd, "gfx/ttd_railtypes.png") {
    template_tunnels(330,460)
}
switch (FEAT_RAILTYPES, SELF, switch_tunnels_param_gui, param_gui) {
    1                       :spriteset_metro_tunnels_ttd;
    spriteset_metro_tunnels_opengfx;
}

spriteset (spriteset_metro_bridge_surfaces_opengfx, "gfx/ogfx_railtypes.png") {
    template_bridge_surfaces(10,300)
}
spriteset (spriteset_metro_bridge_surfaces_ttd, "gfx/ttd_railtypes.png") {
    template_bridge_surfaces(10,300)
}
switch (FEAT_RAILTYPES, SELF, switch_bridge_surfaces_param_gui, param_gui) {
    1                       :spriteset_metro_bridge_surfaces_ttd;
    spriteset_metro_bridge_surfaces_opengfx;
}

spriteset (spriteset_metro_level_crossings_opengfx_open, "gfx/ogfx_railtypes.png") {
    template_bridge_level_crossings_track(10,630)
    template_bridge_level_crossings_light(10,430)
}
spriteset (spriteset_metro_level_crossings_opengfx_closed, "gfx/ogfx_railtypes.png") {
    template_bridge_level_crossings_track(10,630)
    template_bridge_level_crossings_light(170,430)
}
switch (FEAT_RAILTYPES, SELF, switch_metro_level_crossings_opengfx, level_crossing_status) {
    LEVEL_CROSSING_CLOSED: spriteset_metro_level_crossings_opengfx_closed;
    spriteset_metro_level_crossings_opengfx_open;
}
spriteset (spriteset_metro_level_crossings_ttd_open, "gfx/ttd_railtypes.png") {
    template_bridge_level_crossings_track(10,630)
    template_bridge_level_crossings_light(10,430)
}
spriteset (spriteset_metro_level_crossings_ttd_closed, "gfx/ttd_railtypes.png") {
    template_bridge_level_crossings_track(10,630)
    template_bridge_level_crossings_light(170,430)
}
switch (FEAT_RAILTYPES, SELF, switch_metro_level_crossings_ttd, level_crossing_status) {
    LEVEL_CROSSING_CLOSED: spriteset_metro_level_crossings_ttd_closed;
    spriteset_metro_level_crossings_ttd_open;
}
switch (FEAT_RAILTYPES, SELF, switch_level_crossings_param_gui, param_gui) {
    1                       :switch_metro_level_crossings_ttd;
    switch_metro_level_crossings_opengfx;
}

spriteset (spriteset_metro_depot, "gfx/ogfx_railtypes.png") {
    template_depots(10,890)
}

if (railtype_available("SAA3") || (loading_stage == LOADING_STAGE_RESERVE)) {
	//count number of activated railtypes
	param_railtype_activated = param_railtype_activated + 1;
	item (FEAT_RAILTYPES, item_metro) {
		property {
			label:                          "SAA3";
			name:                           string(str_metrotrack_name);
			menu_text:                      string(str_metrotrack_menu_text);
			build_window_caption:           string(str_metrotrack_build_window_caption);
			autoreplace_text:               string(str_metrotrack_autoreplace_text);
			new_engine_text:                string(str_metrotrack_new_engine_text);
			//railtype_flags:               bitmask();
			curve_speed_multiplier:         1;
			station_graphics:               RAILTYPE_STATION_NORMAL;
			speed_limit:                    0;
			acceleration_model:             ACC_MODEL_RAIL;
			//set compatible and powered
			compatible_railtype_list:       ["RAIL", "ELRL",
												 "SAAN", "SABN", "SACN", "SADN", "SAEN",
												 "SAAE", "SABE", "SACE", "SADE", "SAEE",
												 "SAAD", "SABD", "SACD", "SADD", "SAED",
												 "SAAd", "SABd", "SACd", "SADd", "SAEd",
												 "SAAA", "SABA", "SACA", "SADA", "SAEA",
												 "SAAa", "SABa", "SACa", "SADa", "SAEa",
												 "SAAZ", "SSAZ", "SUAZ"];
			powered_railtype_list:          ["SAAZ", "SSAZ", "SUAZ"];
		}
		
		//OpenTTD 1.1 19307
		property {
			construction_cost:          12;
			map_colour:                 0x25;
		}
		
		//OpenTTD 1.1 21866
		/*
		property {
			//introduction_date:
			//requires_railtype_list:
			//sort_order:
			//introduces_railtype_list:["SAAZ", "SSAZ", "SUAZ"];
		}
		*/
		
		//OpenTTD 1.2 23758
		property {
			toolbar_caption:            string(str_metrotrack_toolbar_caption);
			maintenance_cost:           12;
			alternative_railtype_list:  ["3RDR", "MTRO", 
										 "SAA3", "SAB3", "SAC3", "SAD3", "SAE3"];
		}
		
		//disallow level crossings
		if (param_levelcrossings == 0) {
			property {
				railtype_flags:             bitmask(RAILTYPE_FLAG_NO_LEVEL_CROSSING);
			}
		}
		
		/*
		*  GRAPHICS
		*/
		
		graphics {
			gui:                        switch_metro_gui;
			track_overlay:              switch_track_overlay_param_gui;
			underlay:                   switch_underlay_param_gui;
			tunnels:                    switch_tunnels_param_gui;
			//catenary_wire:
			//catenary_pylons
			bridge_surfaces:            switch_bridge_surfaces_param_gui;
			level_crossings:            switch_level_crossings_param_gui;
			depots:						spriteset_metro_depot;
			//fences:
			//tunnel_overlay:
			signals:                    switch_signals;
		}
	}
}
else {
	//count number of disabled railtypes
	param_railtype_disabled = param_railtype_disabled + 1;
}
